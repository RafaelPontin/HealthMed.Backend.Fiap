// <auto-generated />
using System;
using HealthMed.Backend.Infraestrutura.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthMed.Backend.Infraestrutura.Migrations
{
    [DbContext(typeof(HealthMedContext))]
    partial class HealthMedContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthMed.Backend.Dominio.Entidades.Agendamentos", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HorarioCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HorariosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PacienteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HorariosId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("HealthMed.Backend.Dominio.Entidades.Horarios", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("HorarioCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HorarioInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MedicoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("HealthMed.Backend.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CRM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("HealthMed.Backend.Dominio.Entidades.Agendamentos", b =>
                {
                    b.HasOne("HealthMed.Backend.Dominio.Entidades.Horarios", "Horarios")
                        .WithMany()
                        .HasForeignKey("HorariosId");

                    b.HasOne("HealthMed.Backend.Dominio.Entidades.Usuario", "Paciente")
                        .WithMany("Agendamentos")
                        .HasForeignKey("PacienteId");

                    b.Navigation("Horarios");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("HealthMed.Backend.Dominio.Entidades.Horarios", b =>
                {
                    b.HasOne("HealthMed.Backend.Dominio.Entidades.Usuario", "Medico")
                        .WithMany("Horarios")
                        .HasForeignKey("MedicoId");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("HealthMed.Backend.Dominio.Entidades.Usuario", b =>
                {
                    b.OwnsOne("HealthMed.Backend.Dominio.ObjetosDeValor.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("EnderecoEmail")
                                .IsRequired()
                                .HasColumnType("varchar(max)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Email");
                });

            modelBuilder.Entity("HealthMed.Backend.Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("Agendamentos");

                    b.Navigation("Horarios");
                });
#pragma warning restore 612, 618
        }
    }
}
